define("filter_ace_inline/local/utils",["exports","core/str"],(function(_exports,_str){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getLangString=_exports.escapeHtml=_exports.diagnose=_exports.createComponent=_exports.combinedOutput=void 0;_exports.getLangString=async langStringName=>(0,_str.get_string)(langStringName,"filter_ace_inline").catch((()=>{}));_exports.diagnose=response=>{const ERROR_RESPONSES=[[1,0,"error_access_denied"],[2,0,"error_unknown_language"],[3,0,"error_access_denied"],[4,0,"error_submission_limit_reached"],[5,0,"error_sandbox_server_overload"],[0,11,""],[0,12,""],[0,13,"error_timeout"],[0,15,""],[0,17,"error_memory_limit"],[0,21,"error_sandbox_server_overload"],[0,30,"error_excessive_output"]];for(const row of ERROR_RESPONSES)if(row[0]==response.error&&(0!=response.error||response.result==row[1]))return row[2];return"error_unknown_runtime"};_exports.escapeHtml=text=>{const map={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return text.replace(/[&<>"']/g,(function(m){return map[m]}))};_exports.combinedOutput=(response,maxLen)=>{const limit=s=>s.length<=maxLen?s:s.substr(0,maxLen)+"... (truncated)";return response.cmpinfo+limit(response.output)+limit(response.stderr)};_exports.createComponent=(elementName,classList,attributeArray)=>{const element=document.createElement(elementName);classList.forEach((htmlClass=>element.classList.add(htmlClass)));for(const attribute in attributeArray)element.setAttribute(attribute,attributeArray[attribute]);return element}}));

//# sourceMappingURL=utils.min.js.map